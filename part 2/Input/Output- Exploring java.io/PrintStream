PrintStream
The PrintStream class provides all of the output capabilities we have been using from the
System file handle, System.out, since the beginning of the book. This makes PrintStream
one of Java’s most often used classes. It implements the Appendable, Closeable, and
Flushable interfaces.
PrintStream defines several constructors. The ones shown next have been specified
from the start:
PrintStream(OutputStream outputStream)
PrintStream(OutputStream outputStream, boolean flushOnNewline)
PrintStream(OutputStream outputStream, boolean flushOnNewline,
String charSet)
Here, outputStream specifies an open OutputStream that will receive output.


PrintStream(File outputFile) throws FileNotFoundException
PrintStream(File outputFile, String charSet)
throws FileNotFoundException, UnsupportedEncodingException
PrintStream(String outputFileName) throws FileNotFoundException
PrintStream(String outputFileName, String charSet)
throws FileNotFoundException, UnsupportedEncodingException

These allow a PrintStream to be created from a File object or by specifying the name of a
file. In either case, the file is automatically created. Any preexisting file by the same name is
destroyed.


PrintStream supports the print( ) and println( ) methods for all types, including Object.
If an argument is not a primitive type, the PrintStream methods will call the object’s toString( )
method and then display the result.

Recently (with the release of JDK 5), the printf( ) method was added to PrintStream. It
allows you to specify the precise format of the data to be written. The printf( ) method uses
the Formatter class (described in Chapter 18) to format data.
